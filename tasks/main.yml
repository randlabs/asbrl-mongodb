---
- name: Install Python Packages
  pip:
    name:
    - pymongo==3.2
    state: "present"
    executable: "pip3"
  tags:
  - asbrl-mongodb

- name: Install Packages
  apt:
    name:
    - mongodb-clients
    state: "present"
  tags:
  - asbrl-mongodb

- name: Create MongoDB directory
  file:
    path: /home/{{ default_user }}/{{ CONTAINER_NAME }}/certificates
    state: directory
    mode: '0755'
  tags:
  - asbrl-mongodb

- name: MongoDB Data Volume
  docker_volume:
    name: "{{ CONTAINER_NAME }}_data"
    state: "{{ VOLUME_STATE }}"
  tags:
  - asbrl-mongodb

- name: MongoDB config file
  template:
    src: mongod.conf.j2
    dest: /home/{{ default_user }}/{{ CONTAINER_NAME }}/mongod.conf
    mode: '0644'
  tags:
  - asbrl-mongodb

- name: Start MongoDB Container (without Replica Set)
  docker_container:
    name: "{{ CONTAINER_NAME }}"
    image: "mongo:{{ BUILD }}"
    pull: "true"
    recreate: "yes"
    env:
      MONGO_INITDB_ROOT_USERNAME: "{{ ROOT_USERNAME | default(omit) }}"
      MONGO_INITDB_ROOT_PASSWORD: "{{ ROOT_PASSWORD | default(omit) }}"
    cpu_period: "{{ DOCKER_CPU_PERIOD }}"
    cpu_quota: "{{ DOCKER_CPU_QUOTA }}"
    memory: "{{ DOCKER_MEMORY }}"
    state: "{{ CONTAINER_STATE }}"
    log_driver: "{{ DOCKER_LOG_DRIVER }}"
    log_options: "{{ DOCKER_LOG_OPTIONS }}"
    restart_policy: "unless-stopped"
    published_ports:
      - "0.0.0.0:{{ NET_PORT }}:{{ NET_PORT }}"
    volumes:
      - '{{ CONTAINER_NAME }}_data:/data/db'
  when: REPLICA == 'NONE'
  tags:
  - asbrl-mongodb

- name: Init MongoDB Container Replica Set
  docker_container:
    name: "{{ CONTAINER_NAME }}"
    image: "mongo:{{ BUILD }}"
    command:
      - "--replSet {{ REPLICATION_NAME }}"
    pull: "true"
    recreate: "yes"
    env:
      MONGO_INITDB_ROOT_USERNAME: "{{ ROOT_USERNAME }}"
      MONGO_INITDB_ROOT_PASSWORD: "{{ ROOT_PASSWORD }}"
    cpu_period: "{{ DOCKER_CPU_PERIOD }}"
    cpu_quota: "{{ DOCKER_CPU_QUOTA }}"
    memory: "{{ DOCKER_MEMORY }}"
    state: "{{ CONTAINER_STATE }}"
    log_driver: "{{ DOCKER_LOG_DRIVER }}"
    log_options: "{{ DOCKER_LOG_OPTIONS }}"
    restart_policy: "unless-stopped"
    published_ports:
      - "0.0.0.0:{{ NET_PORT }}:{{ NET_PORT }}"
    volumes:
      - '{{ CONTAINER_NAME }}_data:/data/db'
  when: REPLICA != 'NONE'
  tags:
  - asbrl-mongodb

- name: Wait until MongoDB is running
  wait_for:
    port: "{{ NET_PORT }}"
    delay: 5
  when: REPLICA != 'NONE' and CONTAINER_STATE != 'absent'
  tags:
  - asbrl-mongodb

- name: Config MongoDB Standalone Replica Set
  command:
    argv:
      - docker
      - exec
      - "{{ CONTAINER_NAME }}"
      - sh
      - '-c'
      - mongo --username '{{ ROOT_USERNAME }}' --password '{{ ROOT_PASSWORD }}' --eval 'rs.initiate({_id:"{{ REPLICATION_NAME }}",version:1,members:[{_id:0,host:"{{ ansible_host }}:{{ NET_PORT }}"}]})'
  ignore_errors: yes
  when: REPLICA == 'PRIMARY' and CONTAINER_STATE != 'absent'
  tags:
  - asbrl-mongodb

# This Module doesn't work fine in Ansible 2.9 (check in new versions)
# - name: Config MongoDB Standalone Replica Set
#   mongodb_replicaset:
#     login_host: "{{ ansible_host }}"
#     login_port: "{{ NET_PORT }}"
#     login_user: "{{ ROOT_USERNAME }}"
#     login_password: "{{ ROOT_PASSWORD }}"
#     login_database: admin
#     replica_set: "{{ REPLICATION_NAME }}"
#     members: "{{ SERVER_HOST }}:{{ NET_PORT }}"
#     #ssl_cert_reqs: CERT_NONE
#     validate: no
#   when: REPLICA == 'PRIMARY' and CONTAINER_STATE != 'absent'
#   tags:
#   - asbrl-mongodb

- name: Ensure that keyfile has correct permission
  file:
    path: /home/{{ default_user }}/{{ CONTAINER_NAME }}/certificates/{{ SECURITY_KEYFILE }}
    owner: "999"
    group: "999"
    mode: "0400"
  when: CONTAINER_STATE != 'absent' and SECURITY_KEYFILE is defined
  tags:
  - asbrl-mongodb

- name: Start MongoDB Container
  docker_container:
    name: "{{ CONTAINER_NAME }}"
    image: "mongo:{{ BUILD }}"
    command:
      - "--config /etc/mongo/mongod.conf"
    pull: "true"
    recreate: "yes"
    cpu_period: "{{ DOCKER_CPU_PERIOD }}"
    cpu_quota: "{{ DOCKER_CPU_QUOTA }}"
    memory: "{{ DOCKER_MEMORY }}"
    state: "{{ CONTAINER_STATE }}"
    log_driver: "{{ DOCKER_LOG_DRIVER }}"
    log_options: "{{ DOCKER_LOG_OPTIONS }}"
    restart_policy: "unless-stopped"
    published_ports:
      - "0.0.0.0:{{ NET_PORT }}:{{ NET_PORT }}"
    volumes:
      - /home/{{ default_user }}/{{ CONTAINER_NAME }}/mongod.conf:/etc/mongo/mongod.conf
      - '{{ CONTAINER_NAME }}_data:/data/db'
      - /home/{{ default_user }}/{{ CONTAINER_NAME }}/certificates/:/etc/mongo/certificates
  when: CONTAINER_STATE != 'absent'
  tags:
  - asbrl-mongodb

# This Module doesn't work fine in Ansible 2.9 (check in new versions)
# - name: MongoDB INIT DB and Credentials
#   mongodb_user:
#     auth_mechanism: "PLAIN"
#     login_host: "{{ ansible_host }}"
#     replica_set: "{{ REPLICATION_NAME }}"
#     login_port: "{{ NET_PORT }}"
#     login_user: "{{ ROOT_USERNAME }}"
#     login_password: "{{ ROOT_PASSWORD }}"
#     database: "{{ INIT_USER_DB }}"
#     name: "{{ INIT_USER_NAME }}"
#     password: "{{ INIT_USER_PASS }}"
#     roles: "{{ INIT_USER_ROLE }}"
#     state: present
#   when: CONTAINER_STATE != 'absent' and INIT_USER_DB is defined and INIT_USER_NAME is defined and INIT_USER_PASS is defined
#   tags:
#   - asbrl-mongodb

- name: MongoDB INIT DB and Credentials
  command:
    argv:
      - docker
      - exec
      - "{{ CONTAINER_NAME }}"
      - sh
      - '-c'
      - mongo --username '{{ ROOT_USERNAME }}' --password '{{ ROOT_PASSWORD }}' --eval 'db.getSiblingDB("{{ INIT_USER_DB }}").createUser({"user":"{{ INIT_USER_NAME }}","pwd":"{{ INIT_USER_PASS }}",roles:[{role:"{{ INIT_USER_ROLE }}",db:"{{ INIT_USER_DB }}"}]})'
  ignore_errors: yes
  when: CONTAINER_STATE != 'absent' and INIT_USER_DB is defined and INIT_USER_NAME is defined and INIT_USER_PASS is defined
  tags:
  - asbrl-mongodb

- name: Add node as a Secondary to existing Replica Set with priority:0.5 and votes:1
  command:
    argv:
      - sh
      - '-c'
      - mongo -u '{{ MASTER_USERNAME }}' -p '{{ MASTER_PASSWORD }}' --host '{{ MASTER_HOST }}:{{ MASTER_PORT }}' --eval 'rs.add({host:"{{ ansible_host }}:{{ NET_PORT }}",priority:0.5,votes:1})' --authenticationDatabase admin
  when: REPLICA == 'SECONDARY' and CONTAINER_STATE != 'absent'
  tags:
  - asbrl-mongodb

# This Module doesn't work fine in Ansible 2.9 (check in new versions)
# - name: Add node as a Secondary to existing Replica Set
#   mongodb_shell: (only work in Ansible 2.10)
#     login_host: "{{ MASTER_HOST }}"
#     login_port: "{{ MASTER_PORT }}"
#     login_user: "{{ MASTER_USERNAME }}"
#     login_password: "{{ MASTER_PASSWORD }}"
#     eval: "rs.add({host:'{{ SERVER_HOST }}:{{ NET_PORT }}',priority:1,votes:1})"
#   when: REPLICA == 'SECONDARY' and CONTAINER_STATE != 'absent'
#   tags:
#   - asbrl-mongodb